! RULES TODO
! t1x 6408, 6852, 11368, 14368, 14489, 14704

n: _.gender.number;
np: _.gender.number;
adj: _.gender.number;
det: _.definite.gender.number;
num: _.gender.number;
NOM: _.number.gender;
NA: _.number.gender;
AP: _.gender.number.mode;

number = sg pl ND ;
gender = m f mf GD ;
mode = comp sup pos sint ;
definite = ind def ;

det_type = dem ind def pos qnt itg org ;

nom = n n.acr np.loc np.ant np.cog np.al adv;
np = np;
np_acr = np acr;
adj = adj adj.pos vblex.pp vbmod.pp vblex.pron.pp;
grau_adj = comp sup;
det = det.dem det.ind det.def det.pos det.qnt det.itg det.org adj.pos num predet rel.add;
prnpro = prn.pro;
prnenc = prn.enc;
num = num num.percent num.org num.mon num.time;
verb = vblex vblex.pron vbhaver vbser vbmod;
have_aux = vbhaver;
pp = vblex.pp vblex.pron.pp vbser.pp vbmod.pp;
aux = vaux;
prn = prn;
adv = adv preadv adv.itg cnjadv;
rel = rel.nn rel.an rel.adv;
tipus_rel = nn an adv;
tipus_prn = tn obj enc itg pos;
pers = p1 p2 p3 PD;
gen = m f mf GD nt;
gen_sense_mf = m f GD nt;
gen_mf = mf;
nbr = sg pl sp ND;
nbr_sense_sp = sg pl ND;
nbr_sp = sp;
temps = cni fti ifi imp pii pis inf prs pres past pri pp ger pprs subs;

! pattern % passes lem, output % does not

NOM.number.gender -> 1: %n.$lem/sl {%1} |
                     1: %np {%1} |
                     0: adj guio %NOM {%3 _ %1} |
                     0: num guio %NOM {%3 _ %1} |
                     0: %np np np {1 _1 2 _2 3} |
                     ! not completely certain about where to put this
                     ! t1x 11515
                     0: NOM NOM %n ! see t1x 11564
                        {3 _1 de@pr _ 2 _2 de@pr _
                         el@det.def.$gender.$number _ 1} |
                         ! but see t1x 11564
                     0: NOM %NOM {2 _1 de@pr _ 1} ;

! Lines 4989-5328 (dates)
weekday = sunday monday tuesday wednesday thursday friday saturday ;
month = january february march april may june
        july august september november december ;

monthdate -> 1: the@det.def.sp num.ord of@pr $month@n
                {2 _2 3 _3 4(gender=m, number=sg)} |
                ! "the third of March" -> "tercero de Marzo"
                
             3: the@det.def.sp num.ord {2} |
                ! "the third" -> "tercero"
                ! higher weighting so we don't conflict with previous line
                
             1: num $month@n {1 _1 de@pr 2} ;
                ! "3 March" -> "3 de Marzo"
                
caldate -> 2: monthdate {1} |
           1: monthdate num {1 _1 de@pr _ 2} ;
              ! "[3 March] 1999" -> "[3 de Marzo] de 1999"
              
date -> 2: caldate {el@det.def.m.sg 1} |
           ! "[3 March 1999]" -> "el [3 de Marzo de 1999]"
           
        1: $weekday@n caldate {el@det.def.[1.gender].[1.number/tl] _ 1 _1 2} |
           ! "Monday [3 March 1999]" -> "El Lunes [el 3 de Marzo de 1999]"
           
        2: weekday {el@det.def.[1.gender].[1.number/tl] _ 1} ;
           ! "Monday" -> "el Lunes"

PP -> 3: pr NP {1 _1 2} |
         ! "in soup" -> "en sopa"
         
      2: on@pr date {2} |
         ! "on [Tuesday]" -> "[el Martes]"
      0: NP ago@adv {2 _1 1} |
      0: NP hence@adv {dentro\ de@pr _1 2} ;

! Lines 5329-8545 (adjectives)
! the rules beginning on lines 6408 (adj num adj nom) and 6852 (adv pp nom)
! were skipped because I'm not entirely sure what they're doing

CONJ -> 1: cnjcoo {1} | 1: cm {1} ;

AP.gender.number.mode -> 2: %adj {%1} |
                            ! "blue" -> "azul"
                       
                         1: adv %adj {1 _1 %2} |
                                0: adv guio %adj {1 _ %3} |
                         1: preadv %adj {1 _1 %2} |
                            ! "very green" -> "muy verde"

                         1: AP.$mode CONJ AP.$mode
                            {%1 _1 2 _2 %3} |
                            ! "[totally green] and [very tall] ->
                            ! "[totalmente verde] y [muy alto]
                       
                         1: apos %AP apos {1 _1 %2 _2 3} |
                            ! " 'blue' " -> " 'azul' "
                     
                         0: %adj enough@adv {2 _1 %1} |
                         0: np.loc guio vblex.pp {%3 _ en@pr _ 1} |
                         0: %AP to@pr INF {%1 _1 de@pr _2 3} ;

controlnoun = desire order need right duty failure power wish capacity ability hope chance honour compulsion responsibility opportunity idea record way attempt obligation impulse surprise will mean;

verbtype = pron;

INF.temps -> !0: %vblex.inf {%1 se@prn.enc.ref.p3.mf.sp.[1.lemq]} (1.verbtype/tl = pron)
             !               ! ^ TODO: mlu
             !              {%1} |
             0: %vblex.sep.inf {%1} |
             0: %vbser.inf {%1} |
             0: %vbmod.inf {%1} |
             0: %vaux.inf {%1} |
             0: %INF prn.obj
                {%1 _1 prpres@prn.enc(lem=2.lem, person=2.person, gender=2.gender,
                                      number=2.number, lemq=1.lemq)} ;
             
cnjcoo: _;
tractaments = Mr\. Mrs\. Ms\. Dr\.;
NA.number.gender -> 2: %NOM {%1} |
                       ! gender probably hasn't changed, but just in case
                        
                    1: AP %NA
                       {2 _1 %1} |
                       ! "green socks" -> "calcetines verdes"
                        
                    2: num %NA {1 _1 2} |
                       ! "3 elephants" -> "tres elephantes"
                        
                    2: apos %NP apos {1 _1 2 _2 3} |
                       ! " 'sock' " -> " 'calcetine' "

                    0: %NA.f cnjcoo NA.f [$gender=f]
                       {1 _1 2 _2 3} |
                    0: %NA cnjcoo NA {1 _1 2 _2 3} |

                    !0: NOM NOM.$number.$gender
                    !   {1 _1 2} (1.nom in [np.ant np.cog] |
                    !             2.nom in [np.ant np.cog] |
                    !             1.lem/sl in tractaments |
                    !             2.lem/sl in tractaments |
                    !             2.lem/sl in weekday)
                    !   {2 _1 de@pr _ 1} |
                    0: NOM NOM %NOM {3 _2 2 _1 1} |
                    0: %NOM to@pr INF {%1 _1 2 _2 3} ;

yearmonth = year month;
one = 1 one;
under20 = 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19
          one two three four five six seven eight nine ten
          eleven twelve thirteen fourteen fifteen
          sixteen seventeen eighteen nineteen;
AGE -> 0: %$one@num guio $yearmonth@n guio old@adj.sint
          {1 _ 3(number=sg)} |
       0: %num guio $yearmonth@n guio old@adj.sint
          {1 _ 3(number=pl)} |
       0: %$one@num %$yearmonth@n old@adj.sint
          {1 _1 2(number=sg)} |
       0: %num %$yearmonth@n old@adj.sint
          {1 _1 2(number=pl)} ;

NP.number.gender -> 1: all@predet %NP.pl.$gender/tl
                       {%1 _ el@det.def.$gender.pl _1 2} |
                       ! "all tables" -> "todas las mesas"
                        
                    2: det %NP {%1 _1 2} |
                       ! "the books" -> "los libros"
                        
                    2: %NA {%1} |
                       ! "book" -> "libro"
                        
                    1: such\ a@det.ind.sg adj %NOM
                       {un@det.ind.[3.gender].sg _1 3 _2 tan@preadv _ 2} |
                       ! "such a green ceiling" ->
                       ! "un techo tan verde"
                    0: AGE %NP {2 _1 de@pr _ 1} |
                    0: $under20@AGE {niÃ±o@n.$gender.$number _ de@pr _ 1} |
                    0: AGE {persona@n.f.sg _ de@pr _ 1} ;

!REL.tipus_rel.gender.number -> 0: which@prn.itg [$tipus_rel=nn]
!                                  {el\ cual@rel.nn.$gender.$number} |
!                               0: which@rel.an [$tipus_rel=nn]
!                                  {el\ cual@rel.nn.$gender.$number} ;

NUM.gender.number -> 0: num {%1};
DET.gender.number -> 0: det {%1};
! TODO: 15232, 15288 - incorporate into other rules

! SN.det_type.gender.number -> 0: det num {%1 _1 %2};

! TODO: 15370

auxtemps = will shall;

controlverbs = be\#\ likely be\#\ unlikely desire need wish hope choose expect pretend prefer promise recommend decide manage refuse agree avoid enjoy hate intend plan continue resolve try like vow;

copulatiu = look seem become feel get;

! having all these resulting VERB doesn't control for order
! maybe they should be split, but it seems easier to do it this way
! and better to err on the side of parsing everything
VERB.temps.person.number -> 0: %vblex.$lem/sl {%1} |
                            0: %vbser VERB.ger {estar@vblex.$temps.$person.$number _1 2} |
                            0: %vbhaver VERB.pp {%1 _1 2(gender=m, number=sg)} |
                            !0: %do@vbaux VERB
                            !   {_1 %2(tense=ifi)} (1.tense = past)
                            !   {_1 %2(tense=pri)} |
                            0: %$auxtemps@vbaux VERB {_1 %2(tense=fti)} |
                            0: %would@vbaux VERB {_1 %2(tense=cni)} |
                            0: %vbaux VERB.inf {%1 _1 2} |
                            0: %$controlverbs@vblex to@pr VERB.inf
                               {%1 _1 _2 3} |
                            0: %$copulatiu@VERB VERB.pp
                               {%1 _1 2(gender=$gender, number=$number)};
! adv VERB.temps.person.number -> 0: %VERB adv {{2} _1 {1}};
! TODO: prn.obj and adv (not sure if second rule is right)

x -> 0: y z (1.number = 2.number) {2 _1 1};
